// <auto-generated />
using FleetManagementServiceCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FleetManagementServiceCore.Infrastructure.Migrations
{
    [DbContext(typeof(FleetManagementServiceCoreDbContext))]
    [Migration("20250207104536_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContainersVessel", b =>
                {
                    b.Property<int>("ContainersId")
                        .HasColumnType("int");

                    b.Property<int>("VesselsId")
                        .HasColumnType("int");

                    b.HasKey("ContainersId", "VesselsId");

                    b.HasIndex("VesselsId");

                    b.ToTable("ContainersVessel");
                });

            modelBuilder.Entity("FleetManagementServiceCore.BusinessModels.Containers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("FleetManagementServiceCore.BusinessModels.Fleet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fleets");
                });

            modelBuilder.Entity("FleetManagementServiceCore.BusinessModels.Vessel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLoad")
                        .HasColumnType("int");

                    b.Property<int?>("FleetId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FleetId");

                    b.ToTable("Vessels");
                });

            modelBuilder.Entity("ContainersVessel", b =>
                {
                    b.HasOne("FleetManagementServiceCore.BusinessModels.Containers", null)
                        .WithMany()
                        .HasForeignKey("ContainersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleetManagementServiceCore.BusinessModels.Vessel", null)
                        .WithMany()
                        .HasForeignKey("VesselsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FleetManagementServiceCore.BusinessModels.Vessel", b =>
                {
                    b.HasOne("FleetManagementServiceCore.BusinessModels.Fleet", "Fleet")
                        .WithMany()
                        .HasForeignKey("FleetId");

                    b.Navigation("Fleet");
                });
#pragma warning restore 612, 618
        }
    }
}
